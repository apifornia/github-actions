name: 'NPM E2E / Watcher'
description: ''
inputs:
  runs_on:
    type: string
    default: "apifornia-builder"
    required: true
  env_vars:
    type: string
    required: false
  env_file:
    type: string
    default: ".env"
    required: false
  folder:
    type: string
    default: "./"
    required: false
runs:
  using: "composite"
  steps:
# disabled because env file generation should be done in steps of workflow
#    - id: env_file
#      shell: bash
#      run: |
#        if [ """${{ inputs.env_vars }}""" != "" ]; then
#          echo "${{ inputs.env_vars }}" > "${{ inputs.env_file }}"
#        fi
    - id: e2e_tests
      shell: bash
      run: |
        cd ${{ inputs.folder }}
        cat ${{ inputs.env_file }} | base64
        npm install
        # CLEANUP
        docker container rm ${RUNNER_NAME}-cypress || true
        rm -rf /tmp/runner/work/cypress_save/ || true && mkdir -p /tmp/runner/work/cypress_save/ || true
        # RUN TESTS
        docker run \
          --name ${RUNNER_NAME}-cypress \
          --env-file ${{ inputs.env_file }} \
          -v ${LOCAL_FOLDER}/work/watcher/watcher:/e2e \
          -w /e2e \
          cypress/included:latest \
          --browser  firefox \
          --headless || true
        # POST ACTIONS
        docker logs ${RUNNER_NAME}-cypress | ansi2html > /tmp/runner/work/cypress_save/log.html
        docker logs ${RUNNER_NAME}-cypress > /tmp/runner/work/cypress_save/log.txt
        python3 getmsg.py /tmp/runner/work/cypress_save/log.txt > /tmp/runner/work/cypress_save/failing_flow.txt || true
        cp -r ./cypress/screenshots/ /tmp/runner/work/cypress_save/ || true
        echo "====cypress====="
        ls ./cypress/**
        
        # Find files with commas and rename them
        find "/tmp/runner/work/cypress_save/" -type f -name "*,*" | while read -r file; do
            # Get the directory and filename
            dir=$(dirname "$file")
            base=$(basename "$file")
              
            # Replace commas with underscores in the filename
            new_base=$(echo "$base" | sed 's/,/_/g')
              
            # Rename the file
            mv "$file" "$dir/$new_base"
        done

        echo "====save====="
        ls /tmp/runner/work/cypress_save/**
        EXIT=$(docker inspect ${RUNNER_NAME}-cypress --format='{{.State.ExitCode}}')
        if [ "$EXIT" != "0" ]; then
          exit 1
        else
          exit 0
        fi
