name: 'Playwright E2E'
description: ''
inputs:
  runs_on:
    type: string
    default: "apifornia-builder"
    required: true
  env_vars:
    type: string
    required: false
  env_file:
    type: string
    default: ".env"
    required: false
  change_dir:
    type: string
    default: ""
    required: false
  folder:
    type: string
    default: "./"
    required: false
runs:
  using: "composite"
  steps:
#    - id: env_file
#      shell: bash
#      run: |
#        if [ """${{ inputs.env_vars }}""" != "" ]; then
#          echo "${{ inputs.env_vars }}" > "${{ inputs.env_file }}"
#        fi
    - id: tests
      shell: bash
      # next comment  in `run` line is used for code highlight in VSCode
      run: | # shell
        if [ "${{ inputs.change_dir }}" != "" ]; then
          cd ${{ inputs.change_dir }}
        fi
        
        npm install
        # CLEANUP
        docker container rm ${RUNNER_NAME}-playwright || true
        rm -rf /tmp/runner/work/playwright_save/ || true && mkdir -p /tmp/runner/work/playwright_save/ || true
        
        # RUN TESTS
        if [ "${{ inputs.folder }}" != "./" ]; then
          docker run \
            --name ${RUNNER_NAME}-playwright \
            --env-file ${{ inputs.env_file }} \
            -e CI=true \
            -v ${LOCAL_FOLDER}/work/${{ inputs.folder }}:/app \
            -w /app \
            mcr.microsoft.com/playwright:v1.52.0 \
            npm run test || true
        else
          docker run \
            --name ${RUNNER_NAME}-playwright \
            --env-file ${{ inputs.env_file }} \
            -e CI=true \
            -v ${LOCAL_FOLDER}/work/watcher2/watcher2:/app \
            -w /app \
            mcr.microsoft.com/playwright:v1.52.0 \
            npm run test || true
        fi
        
        # POST ACTIONS
        docker logs ${RUNNER_NAME}-playwright | ansi2html > /tmp/runner/work/playwright_save/log.html
        # docker logs ${RUNNER_NAME}-playwright > /tmp/runner/work/playwright_save/log.txt
        # python3 getmsg.py /tmp/runner/work/playwright_save/log.txt > /tmp/runner/work/playwright_save/failing_flow.txt || true
        # cp -r ./playwright/test-results /tmp/runner/work/playwright_save/ || true
        #  npx playwright show-trace test-results/nodes-input--node-input-creating-configure-and-execution-chromium-retry1/trace.zip
        echo "==== playwright ====="
        
        ROOT_DIR="./test-results"
        # Loop through all subdirectories
        find "$ROOT_DIR" -mindepth 1 -maxdepth 1 -type d | while read dir; do
            subdir=$(basename "$dir")
            # Loop through all files in the subdirectory
            find "$dir" -type f | while read file; do
                filename=$(basename "$file")
                # Copy file to root dir with prefix
                cp "$file" "$ROOT_DIR/${subdir}_${filename}"
            done
        done
        
        echo "=========== test-results"
        touch ./test-results 
        cp ./test-results/*.zip /tmp/runner/work/playwright_save/ || true
        # Find files with commas and rename them
        find "/tmp/runner/work/playwright_save/" -type f -name "*,*" | while read -r file; do
            # Get the directory and filename
            dir=$(dirname "$file")
            base=$(basename "$file")
              
            # Replace commas with underscores in the filename
            new_base=$(echo "$base" | sed 's/,/_/g')
              
            # Rename the file
            mv "$file" "$dir/$new_base"
        done
        
        echo "====save====="
        ls /tmp/runner/work/playwright_save/**        
        EXIT=$(docker inspect ${RUNNER_NAME}-playwright --format='{{.State.ExitCode}}')
        if [ "$EXIT" != "0" ]; then
          exit 1
        else
          exit 0
        fi
